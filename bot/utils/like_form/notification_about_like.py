from bot.bot_instance import bot
from bot.keyboards.buttons import create_check_like_markup, create_like_answers_markup, put_away_like_addition_markup
from bot.utils.send_form_utils.send_form import send_form
from database.database_code import Database
from bot.logs.logger import logger


db = Database()


async def send_notification_about_like(user_id: int):
    try:
        form_id = db.get_user_value(user_id=user_id, name="id")
        like_id = db.get_last_like_id(form_id=form_id)

        await bot.send_message(chat_id=user_id, text="–ö—Ç–æ-—Ç–æ –ª–∞–π–∫–Ω—É–ª —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—Éü©∑\n"
                                                     "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å",
                               reply_markup=await create_check_like_markup(like_id=like_id))
    except Exception as e:
        logger.error("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ send_notification_about_like: %s", e)


# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫ –ª–∞–π–∫—É
async def check_like_addition(user_id: int, addition: tuple):  # –¢–æ–ª—å–∫–æ –¥–æ–ø –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∫–æ—Ä—Ç–µ–∂–µ
    try:
        if not any(addition_parameter for addition_parameter in addition):
            return

        if addition[0]:
            await bot.send_message(chat_id=user_id,
                                   text=f"–¢–∞–∫–∂–µ –¥–ª—è —Ç–µ–±—è –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:\n<tg-spoiler>{addition[0]}</tg-spoiler>",
                                   reply_markup=put_away_like_addition_markup, parse_mode="html")
        elif addition[1]:
            await bot.send_photo(chat_id=user_id, photo=addition[1],
                                 caption="–¢–∞–∫–∂–µ –¥–ª—è —Ç–µ–±—è –µ—Å—Ç—å —Ñ–æ—Ç–æ:", has_spoiler=True)
        elif addition[2]:
            await bot.send_video(chat_id=user_id, video=addition[2],
                                 caption="–¢–∞–∫–∂–µ –¥–ª—è —Ç–µ–±—è –µ—Å—Ç—å –≤–∏–¥–µ–æ:", has_spoiler=True)
        elif addition[3]:
            await bot.send_voice(chat_id=user_id, voice=addition[3],
                                 caption="–¢–∞–∫–∂–µ –¥–ª—è —Ç–µ–±—è –µ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")

    except Exception as e:
        logger.error("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ check_like_addition: %s", e)


# –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å—ë –∏–∑ –ë–î –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
async def check_like(like_id: int):
    try:
        like_data = db.get_like_by_its_id(like_id=like_id)  # –î–∞–Ω–Ω—ã–µ –æ –ª–∞–π–∫–µ
        logger.info(f"{like_data}")
        who_liked_user_id = db.get_user_id_by_form_id(form_id=like_data[2])
        liked_user_id = db.get_user_id_by_form_id(form_id=like_data[1])

        # –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É
        await send_form(user_id=liked_user_id, form_user_id=who_liked_user_id)

        # –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è
        addition_data = (like_data[4], like_data[5], like_data[6], like_data[7])
        await check_like_addition(user_id=liked_user_id, addition=addition_data)

        await bot.send_message(chat_id=liked_user_id, text="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –∞–Ω–∫–µ—Ç—ã:",
                               reply_markup=await create_like_answers_markup(like_id=like_data[0]))
    except Exception as e:
        logger.error("–í–æ–∑–Ω–∏–ª–∫–∞ –æ—à–∏–±–∫–∞ –≤ check_like: %s", e)
