from bot.bot_instance import bot
from bot.utils.send_form_utils.send_form import send_form
from bot.keyboards.buttons import forms_actions_markup
from bot.logs.logger import logger
from database.database_code import Database

db = Database()


# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã
async def create_form(user_id: int, form_id: int):
    try:
        if not form_id:
            await bot.send_message(chat_id=user_id, text="–ö–∞–∂–µ—Ç—Å—è, –±–æ–ª—å—à–µ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Çüòï\n"
                                                         "–ü–æ–¥–æ–∂–¥—ë–º, –ø–æ–∫–∞ —Ç–µ–±—è –∫—Ç–æ-—Ç–æ –ª–∞–π–∫–Ω–µ—Ç")
            return
        form_user_id = db.get_user_id_by_form_id(form_id=form_id)
        await send_form(user_id=user_id, form_user_id=form_user_id)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É

        await bot.send_message(chat_id=user_id, text='‚¨ÜÔ∏è–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –∞–Ω–∫–µ—Ç—ã‚¨ÜÔ∏è',
                               reply_markup=forms_actions_markup)
    except Exception as e:
        logger.error('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ process_scrolling: %s', e)
        logger.info(form_id)


async def process_scrolling(user_id: int, current_form_id: int, current_form_index: int):
    try:
        await create_form(user_id=user_id, form_id=current_form_id)

        db.set_user_value(user_id=user_id, current_form_index=current_form_index+1)  # –°–ª–µ–¥—É—é—â–∞—è –∞–Ω–∫–µ—Ç–∞ –ø–æ —Å–ø–∏—Å–∫—É
    except Exception as e:
        logger.error('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ process_scrolling: %s', e)
